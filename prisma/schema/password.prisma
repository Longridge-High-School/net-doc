model Password {
  id       String @id @default(uuid())
  title    String
  username String
  password String
  notes    String

  history PasswordHistory[]
  entries EntryPassword[]
  views   PasswordView[]

  acl   ACL    @relation(fields: [aclId], references: [id])
  aclId String @default("")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model PasswordHistory {
  id               String @id @default(uuid())
  previousTitle    String
  previousUsername String
  previousPassword String
  previousNotes    String

  editedBy   User     @relation(fields: [editedById], references: [id])
  editedById String
  password   Password @relation(fields: [passwordId], references: [id], onDelete: Cascade)
  passwordId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model PasswordView {
  id         String   @id @default(uuid())
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     String
  password   Password @relation(fields: [passwordId], references: [id], onDelete: Cascade)
  passwordId String
  createdAt  DateTime @default(now())
}

model EntryPassword {
  id         String   @id @default(uuid())
  entry      Entry    @relation(fields: [entryId], references: [id], onDelete: Cascade)
  entryId    String
  password   Password @relation(fields: [passwordId], references: [id], onDelete: Cascade)
  passwordId String

  @@unique([entryId, passwordId])
}